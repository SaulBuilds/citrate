version: '3.8'

services:
  lattice-node-devnet:
    build: .
    image: lattice:v3
    container_name: lattice-node-devnet
    restart: unless-stopped
    ports:
      - "8545:8545"   # JSON-RPC
      - "8546:8546"   # WebSocket
      - "3000:3000"   # REST API
      - "30303:30303" # P2P
      - "9100:9100"   # Prometheus metrics
    volumes:
      - lattice-data:/data
      - ./devnet-config.toml:/data/config.toml:ro
    environment:
      - RUST_LOG=info,lattice_api=debug
      - LATTICE_METRICS=1
      - LATTICE_METRICS_ADDR=0.0.0.0:9100
    networks:
      - lattice-network
    profiles: ["devnet"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["devnet"]

  lattice-node-testnet:
    image: lattice:v3
    container_name: lattice-node-testnet
    restart: unless-stopped
    ports:
      - "18545:8545"   # JSON-RPC (testnet)
      - "18546:8546"   # WebSocket (testnet)
      - "30304:30303"  # P2P (testnet)
      - "19100:9100"   # Metrics (testnet)
    volumes:
      - lattice-testnet-data:/data
      - ./testnet-config.toml:/data/config.toml:ro
    environment:
      - RUST_LOG=info
      - LATTICE_METRICS=1
      - LATTICE_METRICS_ADDR=0.0.0.0:9100
    networks:
      - lattice-network
    profiles: ["testnet"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["-c","/data/config.toml"]

  explorer-web:
    image: node:20
    container_name: lattice-explorer-web
    working_dir: /app
    restart: unless-stopped
    environment:
      - DATABASE_URL=${EXPLORER_DATABASE_URL:-postgresql://postgres:password@explorer-db:5432/lattice_explorer}
      - RPC_ENDPOINT=${EXPLORER_RPC_ENDPOINT:-http://lattice-node-devnet:8545}
      - PORT=3000
    volumes:
      - ./explorer:/app
    command: /bin/sh -lc "npm ci && npm run build && npm run start -- -p 3000"
    ports:
      - "3000:3000"
    networks:
      - lattice-network
    depends_on:
      - explorer-db
    profiles: ["explorer"]

  explorer-indexer:
    image: node:20
    container_name: lattice-explorer-indexer
    working_dir: /app
    restart: unless-stopped
    environment:
      - DATABASE_URL=${EXPLORER_DATABASE_URL:-postgresql://postgres:password@explorer-db:5432/lattice_explorer}
      - RPC_ENDPOINT=${EXPLORER_RPC_ENDPOINT:-http://lattice-node-devnet:8545}
    volumes:
      - ./explorer:/app
    command: /bin/sh -lc "npm ci && npm run indexer"
    networks:
      - lattice-network
    depends_on:
      - explorer-db
    profiles: ["explorer"]

  prometheus:
    image: prom/prometheus:latest
    container_name: lattice-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - lattice-network
    depends_on:
      - lattice-node-devnet
    profiles: ["monitoring"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  grafana:
    image: grafana/grafana:latest
    container_name: lattice-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    networks:
      - lattice-network
    depends_on:
      - prometheus
    profiles: ["monitoring"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  explorer-db:
    image: postgres:15-alpine
    container_name: lattice-explorer-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=lattice_explorer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - explorer-postgres-data:/var/lib/postgresql/data
    networks:
      - lattice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles: ["explorer"]

  # Cluster profile: 5 nodes with distinct configs
  lattice-node-1:
    image: lattice:v3
    container_name: lattice-node-1
    restart: unless-stopped
    volumes:
      - cluster-node1:/data
      - ./cluster/node1.toml:/data/config.toml:ro
    ports:
      - "28545:8545"
      - "29100:9100"
    networks: [lattice-network]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["-c","/data/config.toml"]
    profiles: ["cluster"]

  lattice-node-2:
    image: lattice:v3
    container_name: lattice-node-2
    restart: unless-stopped
    volumes:
      - cluster-node2:/data
      - ./cluster/node2.toml:/data/config.toml:ro
    networks: [lattice-network]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["-c","/data/config.toml"]
    depends_on: [lattice-node-1]
    profiles: ["cluster"]

  lattice-node-3:
    image: lattice:v3
    container_name: lattice-node-3
    restart: unless-stopped
    volumes:
      - cluster-node3:/data
      - ./cluster/node3.toml:/data/config.toml:ro
    networks: [lattice-network]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["-c","/data/config.toml"]
    depends_on: [lattice-node-1]
    profiles: ["cluster"]

  lattice-node-4:
    image: lattice:v3
    container_name: lattice-node-4
    restart: unless-stopped
    volumes:
      - cluster-node4:/data
      - ./cluster/node4.toml:/data/config.toml:ro
    networks: [lattice-network]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["-c","/data/config.toml"]
    depends_on: [lattice-node-1]
    profiles: ["cluster"]

  lattice-node-5:
    image: lattice:v3
    container_name: lattice-node-5
    restart: unless-stopped
    volumes:
      - cluster-node5:/data
      - ./cluster/node5.toml:/data/config.toml:ro
    networks: [lattice-network]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["-c","/data/config.toml"]
    depends_on: [lattice-node-1]
    profiles: ["cluster"]

volumes:
  lattice-data:
    driver: local
  lattice-testnet-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  explorer-postgres-data:
    driver: local
  cluster-node1:
    driver: local
  cluster-node2:
    driver: local
  cluster-node3:
    driver: local
  cluster-node4:
    driver: local
  cluster-node5:
    driver: local

networks:
  lattice-network:
    driver: bridge
