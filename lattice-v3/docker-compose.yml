version: '3.8'

services:
  lattice-node:
    build: .
    image: lattice:v3
    container_name: lattice-node
    restart: unless-stopped
    ports:
      - "8545:8545"   # JSON-RPC
      - "8546:8546"   # WebSocket
      - "3000:3000"   # REST API
      - "30303:30303" # P2P
      - "9100:9100"   # Prometheus metrics
    volumes:
      - lattice-data:/data
      - ./config.toml:/data/config.toml:ro
    environment:
      - RUST_LOG=info,lattice_api=debug
      - LATTICE_METRICS=1
      - LATTICE_METRICS_ADDR=0.0.0.0:9100
    networks:
      - lattice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["devnet"]

  lattice-explorer:
    image: nginx:alpine
    container_name: lattice-explorer
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./explorer:/usr/share/nginx/html:ro
    networks:
      - lattice-network
    depends_on:
      - lattice-node

  prometheus:
    image: prom/prometheus:latest
    container_name: lattice-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - lattice-network
    depends_on:
      - lattice-node
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  grafana:
    image: grafana/grafana:latest
    container_name: lattice-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    networks:
      - lattice-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: lattice-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=lattice
      - POSTGRES_USER=lattice
      - POSTGRES_PASSWORD=lattice123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - lattice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  lattice-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  postgres-data:
    driver: local

networks:
  lattice-network:
    driver: bridge
